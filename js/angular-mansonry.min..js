"use strict";var Masonry=require("./node_modules/masonry-layout/masonry"),imagesLoaded=require("./node_modules/imagesLoaded");angular.module("ngMasonry",[]).controller("masonryController",function(){function n(){return!!e.config&&!!e.config.masonryContainer}function r(){var n={itemSelector:e.config.masonryItem},r=e.config.masonryOptions?angular.extend(n,e.config.masonryOptions):n;e.container=new Masonry(e.config.masonryContainer,r),"undefined"!=typeof imagesLoaded&&new imagesLoaded(e.config.masonryContainer,function(){e.reLayout()})}function o(){e.container.layout()}var e=this;e.config={},e.container=void 0,e.ready=n,e.initialize=r,e.reLayout=o}).directive("masonry",function(){function n(n,r){var o=!1,e=angular.element(document.querySelectorAll("["+r.$attr.masonry+"] [data-masonry-item], ["+r.$attr.masonry+"] [masonry-item]"));return angular.forEach(e,function(n){n=angular.element(n),(void 0!==n.attr("ng-repeat")||void 0!==n.attr("data-ng-repeat"))&&(o=!0,n.attr("data-masonry-after-render",""))}),{pre:function(n,r,o,e){e.config.masonryContainer="["+o.$attr.masonry+"]",e.config.masonryOptions=JSON.parse(o.masonryOptions||"{}")},post:function(n,r,e,t){o||t.initialize()}}}var r={restrict:"A",controller:"masonryController",compile:n};return r}).directive("masonryItem",function(){function n(){return{pre:function(n,r,o,e){void 0===e.config.masonryItem&&(e.config.masonryItem="["+o.$attr.masonryItem+"]")}}}var r={restrict:"A",require:"^masonry",priority:1,compile:n};return r}).directive("masonryAfterRender",["$timeout",function(n){"ngInject";function r(r,o,e,t){if(r.$last){var a=null;a=n(function(){t.initialize(),n.cancel(a)})}}var o={restrict:"A",require:"^masonry",priority:0,link:r};return o}]);